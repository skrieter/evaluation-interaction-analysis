plugins {
    id 'de.featjar.java-application'
}

dependencies {
    implementation 'de.featjar:formula'
    implementation 'de.featjar:formula-analysis-sat4j'
    implementation 'de.featjar:evaluation'
}

license {
    ext {
        author = 'FeatJAR-Development-Team'
        url = 'https://github.com/FeatureIDE/FeatJAR'
    }
}

task setupConfig(type: Copy) {
    onlyIf{ !file('config_default').exists() }
    from zipTree('config_default.zip')
    into projectDir
    eachFile {
        if (it.relativePath.getFile(destinationDir).exists()) {
            it.exclude()
        }
    }
}

task setupModels(type: Copy) {
    onlyIf{ !file('models').exists() }
    from zipTree('models.zip')
    into  "${projectDir}/models"
    eachFile {
        if (it.relativePath.getFile(destinationDir).exists()) {
            it.exclude()
        }
    }
}

assemble.finalizedBy setupConfig
assemble.finalizedBy setupModels

tasks.register('archiveResults', Zip) {
    group = "Application"
    description = "Creates a zip archive with the latest results directory."
	def curResults = new File("results/.current").getText().readLines()
	if (!curResults.isEmpty()) {
		def curResultDir = curResults[0]
		println curResultDir
		archiveFileName = "${curResultDir}.zip"
    	destinationDirectory = layout.projectDirectory
    	from layout.projectDirectory.dir("results/${curResultDir}")
	}
}
